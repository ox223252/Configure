#!/bin/bash
# Copyright (C) 2018 name of ox223252
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#

MAX_X=$(tput cols)
MAX_Y=$(tput lines)

WIDTH=60
HEIGH=20
LINES=12
tmpFile="/tmp/rep"

SRC="src"
USER="ox223252"

# parse arguments
for arg in $@
do
	case $arg in
		-h)
			echo "usage $0 [-u git_USER] [-s SRC_dst]"
			;;
		-*)
			last=$arg
			;;
		*)
			case $last in
				-u)
					USER=$arg
					;;
				-s)
					SRC=$arg
					;;
			esac
			;;
	esac
done

checkGitRepo ()
{
	title=$1
	winType=$2

	user=$3

	# verifications
	if [ "$winType" != "checklist" ]; then
		return
	fi

	# get repo informations
	rep=$( curl "https://api.github.com/users/$user/repos?per_page=1000" )
	if [ "$rep" != "" ]; then

		error=$( echo $rep | grep "rate limit exceeded" )

		if [ "$error" != "" ]; then
			read -p "github API rate limit exceeded, need client id:" CLIENT
			read -s -p "Votre passwd ? " PASSWD

			rep=$( curl --user "$CLIENT:$PASSWD" "https://api.github.com/users/$user/repos?per_page=1000" )
		fi
	fi

	# get names and URL from informations
	name=( $( echo "$rep" | grep "\"name\"" | grep -v -E "(GNU)|(MIT)|(Eclipse)" | cut -d'"' -f4 ) )
	url=( $( echo "$rep" | grep "\"clone_url\"" | cut -d'"' -f4 ) )
	if [ "$name" == "" ] || [ "$url" == "" ]; then
		echo "something doesn't work"
		echo "$rep"
		exit
	fi

	if [ "$cancel" != "--nocancel" ]; then
		cancel="--cancel-label $cancel"
	fi

	inputLength=${#name[@]}

	PARAMS=""
	values=()

	for (( i=0; i<${inputLength}; i++ ))
	do
		if [ -d "$SRC/${name[${i}]}" ]; then
			values[${i}]="on"
		else
			values[${i}]="off"
		fi

		# get description, can't done like name or url because bash
		# get some trouble with array of array
		# remove all text before description
		rep=${rep#*description}
		description=$( echo $rep | cut -d'"' -f3 )
		echo description : --$description--

		description=$( echo "${description[@]}" | sed 's/\s/_/g' )

		PARAMS=$(echo $PARAMS $i "${name[$i]}" ${values[$i]} $description)
	done

	# print dialogbox
	dialog \
		--item-help \
		--checklist \
		"$title" \
		$HEIGH \
		$WIDTH \
		$LINES \
		$(echo $PARAMS) 2> $tmpFile

	parameters=$(cat $tmpFile)

	# get result and clone if needed
	for item in $parameters
	do
		if [ -d "$SRC/${name[${item}]}" ]; then
			echo "${name[${item}]} already exist"
		elif [ -d .git ]; then
			git submodule add ${url[${item}]} $SRC/${name[${item}]}
		else
			git clone ${url[${item}]} $SRC/${name[${item}]}
		fi
	done
}

checkGitRepo \
	"$USER's git" \
	"checklist" \
	"$USER"

